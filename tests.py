import numpy as np
import sudoku  

def run_tests():

    arr1 = np.array([[5, 3, 0, 0, 7, 0, 0, 0, 0],
          [6, 0, 0, 1, 9, 5, 0, 0, 0],
          [0, 9, 8, 0, 0, 0, 0, 6, 0],
          [8, 0, 0, 0, 6, 0, 0, 0, 3],
          [4, 0, 0, 8, 0, 3, 0, 0, 1],
          [7, 0, 0, 0, 2, 0, 0, 0, 6],
          [0, 6, 0, 0, 0, 0, 2, 8, 0],
          [0, 0, 0, 4, 1, 9, 0, 0, 5],
          [0, 0, 0, 0, 8, 0, 0, 7, 9]])

 
    # Hard
    arr2 = np.array([[0,9,0,0,0,0,2,0,0], 
                   [4,0,0,0,6,0,0,1,7], 
                   [0,2,3,7,0,0,0,0,0], 
                   [0,0,0,2,7,0,0,0,0], 
                   [2,1,7,0,0,0,3,8,6], 
                   [0,0,0,0,3,6,0,0,0], 
                   [0,0,0,0,0,7,4,3,0], 
                   [9,7,0,0,4,0,0,0,2], 
                   [0,0,5,0,0,0,0,7,0]])    
    
   
    #Evil
    arr3 = np.array([[8,3,0,0,1,5,0,0,0], 
                    [0,6,0,0,3,0,0,0,0], 
                    [4,0,2,0,0,0,0,0,0], 
                    [3,0,0,0,0,0,5,2,0], 
                    [0,0,8,1,0,6,9,0,0], 
                    [0,7,6,0,0,0,0,0,4], 
                    [0,0,0,0,0,0,7,0,2], 
                    [0,0,0,0,4,0,0,6,0], 
                    [0,0,0,3,7,0,0,9,5]])


    #No solution, same as above expect one extra cell value 9 added at index (6,1)
    arr4 = np.array([[8,3,0,0,1,5,0,0,0], 
                    [0,6,0,0,3,0,0,0,0], 
                    [4,0,2,0,0,0,0,0,0], 
                    [3,0,0,0,0,0,5,2,0], 
                    [0,0,8,1,0,6,9,0,0], 
                    [0,7,6,0,0,0,0,0,4], 
                    [0,9,0,0,0,0,7,0,2], 
                    [0,0,0,0,4,0,0,6,0], 
                    [0,0,0,3,7,0,0,9,5]])

    
    for i, arr in enumerate([arr1, arr2, arr3, arr4]):
        print("\n-----------------------")    
        print(f"Solving test case: {i+1}")
        sudoku.print_board(arr)
        a = sudoku.solve_board(arr)
        if(a is False or a is None):
            print("No solution exists")

run_tests()        
